version: '3.7'

services:
  go-app:
    container_name: go-app
    build:
      context: ../..
      dockerfile: AppDockerfile
    depends_on:
      - go-rabbit-mq
    environment:
      - GO_ENV=docker
    restart: on-failure
    ports:
      - 3000:3000
    networks:
      - go-network
    command: >
      bash -c "/scripts/wait-for-it.sh -s -t 10 go-rabbit-mq:5672 -- /app/main"

  go-rabbit-mq:
    container_name: go-rabbit-mq
    image: rabbitmq:3.6-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabitmq:/etc/rabbitmq/
    networks:
      - go-network

  rest-mock:
    container_name: rest-mock
    image: vimagick/json-server
    command: -H 0.0.0.0 -p 4000 -w db.json
    ports:
      - 4000:4000
    volumes:
      - ./mock/rest:/data
    restart: unless-stopped
    networks:
      - go-network

  go-stress-test:
    container_name: go-stress-test
    build:
      context: .
      dockerfile: StressTestDockerFile
    depends_on:
      - go-app
    environment:
      - GO_ENV=docker
    networks:
      - go-network
    command: /app/main

volumes:
  rabitmq:

networks:
  go-network:
    driver: bridge